[
  {
    "path": "posts/2021-02-02-tidytuesday-visualizing-plastic-pollution/",
    "title": "TidyTuesday: Visualizing Plastic Pollution",
    "description": "This post contains the code and a map of Pepsi plastic pollution that I created for the 2021-01-26 TidyTuesday.",
    "author": [
      {
        "name": "Kristin Gill",
        "url": {}
      }
    ],
    "date": "2021-02-02",
    "categories": [],
    "contents": "\r\nPepsi Plastic Pollution Image from The GuardianSummary\r\nThis project utilizes plastic data provided by TidyTuesday and the organization Break Free From Plastic. To create this visualization, I downloaded country latitude/longitude data and merged it with the plastics data set by “country”. I also downloaded data for a base map. Initially, my base map and points did not line up correctly. I thought this was a problem with the data I downloaded, so I kept searching for different data and learned about different packages (jsonlite, geojsonR, leaflet), functions, and data types (geojson). After all of that, I realized that I just needed to switch the order of c(“latitude”, “longitude”) to c(“longitude”, “latitude”) when converting the merged csv to a shapefile. This is so that longitude is recognized as x and latitude as y. Another troubleshooting problem I ran into was that not all of the countries showed up in the merged data frame, so I needed to go back and make sure all of the country names matched between the data frames.\r\nMain Takeaways\r\nHow to merge spatial data with a csv file by a column.\r\nAlways make sure longitude is in the x position and latitude is in the y position.\r\nAlso make sure everything in a column matches for a merge.\r\n\r\nHow to customize maps, using theme (panel.grid.major, panel.background, panel.border) and coord_sf(xlim, ylim).\r\nWrangling the Data\r\n\r\n\r\nShow code\r\n\r\n# read in the data\r\nplastics <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-01-26/plastics.csv') %>% \r\n  dplyr::select(!grand_total) %>% \r\n  pivot_longer(cols = 5:11, names_to = \"plastics\", values_to = \"counts\") %>% \r\n  filter(year == 2020) %>% \r\n  filter(str_detect(parent_company, \"Pepsi\")) %>% \r\n  filter(parent_company == \"Pepsico\") %>% \r\n  dplyr::select(!volunteers) %>% \r\n  dplyr::select(!empty) %>% \r\n  dplyr::select(!num_events) %>%\r\n  mutate(country = case_when(\r\n    country == \"United States of America\" ~ \"United States\",\r\n    country == \"United Kingdom of Great Britain & Northern Ireland\" ~ \"United Kingdom\",\r\n    country == \"Korea\" ~ \"South Korea\",\r\n    TRUE ~ as.character(country)\r\n  ))\r\n\r\n# read in the data\r\ncountry_lat_long <- read_csv(\"world_country_and_usa_states_latitude_and_longitude_values.csv\") %>% dplyr::select(country, latitude, longitude)\r\n\r\nworld_map <- read_sf(\"99bfd9e7-bb42-4728-87b5-07f8c8ac631c2020328-1-1vef4ev.lu5nk.shp\") %>% clean_names() %>% \r\n  rename(\"country\" = \"cntry_name\")\r\n\r\nworld_countries_map <- read_sf(\"World_Countries__Generalized_.shp\") %>% \r\n  clean_names()\r\n\r\n# merge the data\r\nmerged_data <- merge(plastics, world_countries_map, by = \"country\")\r\n\r\nmerge_2 <- merge(merged_data, country_lat_long, by = \"country\")\r\n\r\n\r\n\r\nTransforming to Shapefile and Setting CRS\r\n\r\n\r\nShow code\r\n\r\ndata_shapefile <- st_as_sf(merge_2, coords = c(\"longitude\", \"latitude\"))\r\n\r\nst_transform(world_countries_map, 4326)\r\n\r\n\r\nSimple feature collection with 249 features and 7 fields\r\ngeometry type:  MULTIPOLYGON\r\ndimension:      XY\r\nbbox:           xmin: -180 ymin: -89 xmax: 180 ymax: 83.6236\r\ngeographic CRS: WGS 84\r\n# A tibble: 249 x 8\r\n     fid country iso   countryaff aff_iso shape_leng shape_area\r\n * <int> <chr>   <chr> <chr>      <chr>        <dbl>      <dbl>\r\n 1     1 Americ~ AS    United St~ US           0.600   0.0137  \r\n 2     2 United~ UM    United St~ US           0.480   0.00322 \r\n 3     3 Cook I~ CK    New Zeala~ NZ           0.981   0.0131  \r\n 4     4 French~ PF    France     FR           3.93    0.175   \r\n 5     5 Niue    NU    New Zeala~ NZ           0.541   0.0214  \r\n 6     6 Pitcai~ PN    United Ki~ GB           0.338   0.00429 \r\n 7     7 Samoa   WS    Samoa      WS           3.02    0.246   \r\n 8     8 Tokelau TK    New Zeala~ NZ           0.109   0.000606\r\n 9     9 Tonga   TO    Tonga      TO           1.31    0.0400  \r\n10    10 Wallis~ WF    France     FR           0.701   0.0134  \r\n# ... with 239 more rows, and 1 more variable: geometry <MULTIPOLYGON\r\n#   [°]>\r\n\r\nShow code\r\n\r\nst_crs(data_shapefile) = 4326\r\n\r\n\r\n\r\nCreating the Map\r\n\r\n\r\nShow code\r\n\r\nggplot()+\r\n  geom_sf(data = world_countries_map, size = 0.5, color = \"darkgray\", fill = \"antiquewhite1\") +\r\n  geom_sf(data = data_shapefile, aes(size = counts), color = \"dodgerblue4\") +\r\n  theme(panel.grid.major = element_line(colour = gray(0.5), linetype = \"dashed\", \r\n         size = 0.5), panel.background = element_rect(fill = \"aliceblue\"), \r\n         panel.border = element_rect(fill = NA)) +\r\n  labs(x = \"Longitude\",\r\n       y = \"Latitude\",\r\n       title = \"Pepsi Plastic Found Around the World by Break Free from Plastic, 2020\") +\r\n  coord_sf(xlim = c(-180, 180), ylim = c(-90, 90), expand = FALSE)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-02-02-tidytuesday-visualizing-plastic-pollution/tidytuesday-visualizing-plastic-pollution_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2021-03-11T13:56:08-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-01-13-welcome/",
    "title": "Welcome!",
    "description": "Welcome to my website and blog. My name is Kristin Gill and I am a master student at the Bren School of Environmental Science & Management.",
    "author": [
      {
        "name": "Kristin Gill",
        "url": {}
      }
    ],
    "date": "2021-01-13",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-02-02T08:02:29-08:00",
    "input_file": {}
  }
]
